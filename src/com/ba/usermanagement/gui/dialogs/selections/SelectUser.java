/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectClient.java
 *
 * Created on 01/08/2011, 13:26:50
 */
package com.ba.usermanagement.gui.dialogs.selections;

import com.ba.swingapphelper.gui.GUIMensajes;
import com.ba.usermanagement.UserTableModel;
import com.ib.HBCore.controllers.UserController;
import com.ib.HBCore.entities.User;
import com.ib.HBCore.exceptions.ValidationException;
import com.ib.modeloTabla.Modelo;
import com.ib.modeloTabla.TableSorter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Federico Saravia
 */
public class SelectUser extends javax.swing.JDialog {

    private final UserController controller = new UserController();
    private User selected;
    private List<User> excludeUsers;

    /**
     * Creates new form SelectClient
     */
    private SelectUser(java.awt.Frame parent, List<User> excludeUsers) throws Exception {
        super(parent, true);
        this.excludeUsers = excludeUsers;
        if (this.excludeUsers == null) {
            this.excludeUsers = new ArrayList<User>();
        }
        initComponents();
        findAll();
    }

    public static User selectUser(java.awt.Frame parent, List<User> excludeClients) throws Exception {
        SelectUser dialog = new SelectUser(parent, excludeClients);
        dialog.setLocationRelativeTo(parent);
        dialog.setVisible(true);
        User selected = dialog.selected;
        dialog.dispose();
        return selected;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setForeground(java.awt.Color.white);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Seleccionar usuario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(850, 250));

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jButton3.setText("Seleccionar usuario");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jButton3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            select();
        }
}//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        select();
    }//GEN-LAST:event_jButton3ActionPerformed

    @Override
    public JRootPane getRootPane() {
        final ActionListener actionListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                dispose();
            }
        };
        KeyStroke stroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        JRootPane rp = super.getRootPane();
        rp.registerKeyboardAction(actionListener, stroke, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return rp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void findAll() {
        try {
            List<User> list = controller.fetchAll();
            if (excludeUsers != null) {
                list.removeAll(excludeUsers);
            }
            Modelo.crearModelo(UserTableModel.convert(list), jTable1);
        } catch (Exception e) {
            GUIMensajes.mostrarErrorReportar(this, e);
        }
    }

    public void select() {
        try {
            int fila = jTable1.getSelectedRow();
            if (fila < 0) {
                throw new ValidationException("Seleccione una fila");
            } else {
                TableSorter t = (TableSorter) jTable1.getModel();
                this.selected = ((UserTableModel) t.getDatosAt(fila)).getUser();
                this.setVisible(false);
            }
        } catch (ClassCastException cce) {
            //Dont do anything if the user selects something else than a user
        } catch (Exception ex) {
            GUIMensajes.mostrarErrorReportar(this, ex);
        }
    }
}
